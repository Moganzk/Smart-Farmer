{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useTheme } from \"../contexts/ThemeContext\";\nimport { STORAGE_KEYS } from \"../constants/config\";\nimport SplashScreen from \"../screens/SplashScreen\";\nimport OnboardingScreen from \"../screens/onboarding/OnboardingScreen\";\nimport LoginScreen from \"../screens/auth/LoginScreen\";\nimport RegisterScreen from \"../screens/auth/RegisterScreen\";\nimport ForgotPasswordScreen from \"../screens/auth/ForgotPasswordScreen\";\nimport VerifyPhoneScreen from \"../screens/auth/VerifyPhoneScreen\";\nimport HomeScreen from \"../screens/home/HomeScreen\";\nimport ProfileScreen from \"../screens/profile/ProfileScreen\";\nimport ProfileEditScreen from \"../screens/profile/ProfileEditScreen\";\nimport DiseaseDetectionScreen from \"../screens/diseases/DiseaseDetectionScreen\";\nimport DiseaseResultScreen from \"../screens/diseases/DiseaseResultScreen\";\nimport DiseaseHistoryScreen from \"../screens/diseases/DiseaseHistoryScreen\";\nimport AdvisoryScreen from \"../screens/advisory/AdvisoryScreen\";\nimport AdvisoryDetailScreen from \"../screens/advisory/AdvisoryDetailScreen\";\nimport AdvisorySearchScreen from \"../screens/advisory/AdvisorySearchScreen\";\nimport AdvisoryCategoryScreen from \"../screens/advisory/AdvisoryCategoryScreen\";\nimport GroupsScreen from \"../screens/groups/GroupsScreen\";\nimport GroupDetailScreen from \"../screens/groups/GroupDetailScreen\";\nimport GroupCreateScreen from \"../screens/groups/GroupCreateScreen\";\nimport GroupChatScreen from \"../screens/groups/GroupChatScreen\";\nimport SettingsScreen from \"../screens/settings/SettingsScreen\";\nimport AboutScreen from \"../screens/settings/AboutScreen\";\nimport PrivacyScreen from \"../screens/settings/PrivacyScreen\";\nimport TermsScreen from \"../screens/settings/TermsScreen\";\nimport NotificationsScreen from \"../screens/notifications/NotificationsScreen\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar Drawer = createDrawerNavigator();\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar MainTabNavigator = function MainTabNavigator() {\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      tabBarActiveTintColor: theme.colors.primary,\n      tabBarInactiveTintColor: theme.colors.tabIconInactive,\n      tabBarStyle: {\n        backgroundColor: theme.colors.background,\n        borderTopColor: theme.colors.border,\n        paddingBottom: 5,\n        height: 60\n      },\n      tabBarLabelStyle: {\n        fontSize: 12,\n        fontWeight: '500'\n      }\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"HomeTab\",\n      component: HomeScreen,\n      options: {\n        tabBarLabel: 'Home',\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color,\n            size = _ref.size;\n          return _jsx(Ionicons, {\n            name: \"home\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"DiseaseTab\",\n      component: DiseaseNavigator,\n      options: {\n        tabBarLabel: 'Diseases',\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n            size = _ref2.size;\n          return _jsx(Ionicons, {\n            name: \"leaf\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"AdvisoryTab\",\n      component: AdvisoryNavigator,\n      options: {\n        tabBarLabel: 'Advisory',\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n            size = _ref3.size;\n          return _jsx(Ionicons, {\n            name: \"book\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"GroupsTab\",\n      component: GroupsNavigator,\n      options: {\n        tabBarLabel: 'Groups',\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color,\n            size = _ref4.size;\n          return _jsx(Ionicons, {\n            name: \"people\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    })]\n  });\n};\nvar DiseaseNavigator = function DiseaseNavigator() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"DiseaseDetection\",\n      component: DiseaseDetectionScreen\n    }), _jsx(Stack.Screen, {\n      name: \"DiseaseResult\",\n      component: DiseaseResultScreen\n    }), _jsx(Stack.Screen, {\n      name: \"DiseaseHistory\",\n      component: DiseaseHistoryScreen\n    })]\n  });\n};\nvar AdvisoryNavigator = function AdvisoryNavigator() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Advisory\",\n      component: AdvisoryScreen\n    }), _jsx(Stack.Screen, {\n      name: \"AdvisoryDetail\",\n      component: AdvisoryDetailScreen\n    }), _jsx(Stack.Screen, {\n      name: \"AdvisorySearch\",\n      component: AdvisorySearchScreen\n    }), _jsx(Stack.Screen, {\n      name: \"AdvisoryCategory\",\n      component: AdvisoryCategoryScreen\n    })]\n  });\n};\nvar GroupsNavigator = function GroupsNavigator() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Groups\",\n      component: GroupsScreen\n    }), _jsx(Stack.Screen, {\n      name: \"GroupDetail\",\n      component: GroupDetailScreen\n    }), _jsx(Stack.Screen, {\n      name: \"GroupCreate\",\n      component: GroupCreateScreen\n    }), _jsx(Stack.Screen, {\n      name: \"GroupChat\",\n      component: GroupChatScreen\n    })]\n  });\n};\nvar MainDrawerNavigator = function MainDrawerNavigator() {\n  var _useTheme2 = useTheme(),\n    theme = _useTheme2.theme;\n  var _useAuth = useAuth(),\n    user = _useAuth.user,\n    logout = _useAuth.logout;\n  return _jsxs(Drawer.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      drawerActiveBackgroundColor: theme.colors.primaryLight,\n      drawerActiveTintColor: theme.colors.primary,\n      drawerInactiveTintColor: theme.colors.text,\n      drawerLabelStyle: {\n        fontSize: 16,\n        marginLeft: -20\n      },\n      drawerStyle: {\n        backgroundColor: theme.colors.background,\n        width: 280\n      }\n    },\n    drawerContent: function drawerContent(props) {\n      return _jsx(DrawerContent, _objectSpread(_objectSpread({}, props), {}, {\n        user: user,\n        logout: logout\n      }));\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"MainTabs\",\n      component: MainTabNavigator,\n      options: {\n        drawerLabel: 'Home',\n        drawerIcon: function drawerIcon(_ref5) {\n          var color = _ref5.color,\n            size = _ref5.size;\n          return _jsx(Ionicons, {\n            name: \"home-outline\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        drawerLabel: 'My Profile',\n        drawerIcon: function drawerIcon(_ref6) {\n          var color = _ref6.color,\n            size = _ref6.size;\n          return _jsx(Ionicons, {\n            name: \"person-outline\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Notifications\",\n      component: NotificationsScreen,\n      options: {\n        drawerLabel: 'Notifications',\n        drawerIcon: function drawerIcon(_ref7) {\n          var color = _ref7.color,\n            size = _ref7.size;\n          return _jsx(Ionicons, {\n            name: \"notifications-outline\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Settings\",\n      component: SettingsScreen,\n      options: {\n        drawerLabel: 'Settings',\n        drawerIcon: function drawerIcon(_ref8) {\n          var color = _ref8.color,\n            size = _ref8.size;\n          return _jsx(Ionicons, {\n            name: \"settings-outline\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"About\",\n      component: AboutScreen,\n      options: {\n        drawerLabel: 'About',\n        drawerIcon: function drawerIcon(_ref9) {\n          var color = _ref9.color,\n            size = _ref9.size;\n          return _jsx(Ionicons, {\n            name: \"information-circle-outline\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    })]\n  });\n};\nvar AuthNavigator = function AuthNavigator() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      animation: 'slide_from_right'\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Register\",\n      component: RegisterScreen\n    }), _jsx(Stack.Screen, {\n      name: \"ForgotPassword\",\n      component: ForgotPasswordScreen\n    }), _jsx(Stack.Screen, {\n      name: \"VerifyPhone\",\n      component: VerifyPhoneScreen\n    })]\n  });\n};\nvar AppNavigator = function AppNavigator() {\n  var _useTheme3 = useTheme(),\n    theme = _useTheme3.theme;\n  var _useAuth2 = useAuth(),\n    isAuthenticated = _useAuth2.isAuthenticated,\n    isLoading = _useAuth2.isLoading;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasCompletedOnboarding = _useState2[0],\n    setHasCompletedOnboarding = _useState2[1];\n  useEffect(function () {\n    var checkOnboarding = function () {\n      var _ref0 = _asyncToGenerator(function* () {\n        try {\n          var value = yield AsyncStorage.getItem(STORAGE_KEYS.ONBOARDING_COMPLETED);\n          setHasCompletedOnboarding(value === 'true');\n        } catch (error) {\n          console.error('Error checking onboarding status:', error);\n          setHasCompletedOnboarding(false);\n        }\n      });\n      return function checkOnboarding() {\n        return _ref0.apply(this, arguments);\n      };\n    }();\n    checkOnboarding();\n  }, []);\n  if (isLoading || hasCompletedOnboarding === null) {\n    return _jsx(SplashScreen, {});\n  }\n  return _jsx(NavigationContainer, {\n    theme: theme.navigation,\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: !hasCompletedOnboarding ? _jsx(Stack.Screen, {\n        name: \"Onboarding\",\n        component: OnboardingScreen\n      }) : !isAuthenticated ? _jsx(Stack.Screen, {\n        name: \"Auth\",\n        component: AuthNavigator\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Main\",\n          component: MainDrawerNavigator\n        }), _jsx(Stack.Screen, {\n          name: \"ProfileEdit\",\n          component: ProfileEditScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Privacy\",\n          component: PrivacyScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Terms\",\n          component: TermsScreen\n        })]\n      })\n    })\n  });\n};\nvar DrawerContent = function DrawerContent(props) {\n  return null;\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","useEffect","useState","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","createDrawerNavigator","AsyncStorage","useAuth","useTheme","STORAGE_KEYS","SplashScreen","OnboardingScreen","LoginScreen","RegisterScreen","ForgotPasswordScreen","VerifyPhoneScreen","HomeScreen","ProfileScreen","ProfileEditScreen","DiseaseDetectionScreen","DiseaseResultScreen","DiseaseHistoryScreen","AdvisoryScreen","AdvisoryDetailScreen","AdvisorySearchScreen","AdvisoryCategoryScreen","GroupsScreen","GroupDetailScreen","GroupCreateScreen","GroupChatScreen","SettingsScreen","AboutScreen","PrivacyScreen","TermsScreen","NotificationsScreen","Stack","Tab","Drawer","Ionicons","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MainTabNavigator","_useTheme","theme","Navigator","screenOptions","headerShown","tabBarActiveTintColor","colors","primary","tabBarInactiveTintColor","tabIconInactive","tabBarStyle","backgroundColor","background","borderTopColor","border","paddingBottom","height","tabBarLabelStyle","fontSize","fontWeight","children","Screen","name","component","options","tabBarLabel","tabBarIcon","_ref","color","size","DiseaseNavigator","_ref2","AdvisoryNavigator","_ref3","GroupsNavigator","_ref4","MainDrawerNavigator","_useTheme2","_useAuth","user","logout","drawerActiveBackgroundColor","primaryLight","drawerActiveTintColor","drawerInactiveTintColor","text","drawerLabelStyle","marginLeft","drawerStyle","width","drawerContent","props","DrawerContent","_objectSpread","drawerLabel","drawerIcon","_ref5","_ref6","_ref7","_ref8","_ref9","AuthNavigator","animation","AppNavigator","_useTheme3","_useAuth2","isAuthenticated","isLoading","_useState","_useState2","_slicedToArray","hasCompletedOnboarding","setHasCompletedOnboarding","checkOnboarding","_ref0","_asyncToGenerator","value","getItem","ONBOARDING_COMPLETED","error","console","apply","arguments","navigation"],"sources":["C:/Users/eacha/OneDrive/Desktop/SMART FARMER/FRONTEND/src/navigation/AppNavigator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\nimport { STORAGE_KEYS } from '../constants/config';\r\n\r\n// Import screens\r\nimport SplashScreen from '../screens/SplashScreen';\r\nimport OnboardingScreen from '../screens/onboarding/OnboardingScreen';\r\nimport LoginScreen from '../screens/auth/LoginScreen';\r\nimport RegisterScreen from '../screens/auth/RegisterScreen';\r\nimport ForgotPasswordScreen from '../screens/auth/ForgotPasswordScreen';\r\nimport VerifyPhoneScreen from '../screens/auth/VerifyPhoneScreen';\r\nimport HomeScreen from '../screens/home/HomeScreen';\r\nimport ProfileScreen from '../screens/profile/ProfileScreen';\r\nimport ProfileEditScreen from '../screens/profile/ProfileEditScreen';\r\nimport DiseaseDetectionScreen from '../screens/diseases/DiseaseDetectionScreen';\r\nimport DiseaseResultScreen from '../screens/diseases/DiseaseResultScreen';\r\nimport DiseaseHistoryScreen from '../screens/diseases/DiseaseHistoryScreen';\r\nimport AdvisoryScreen from '../screens/advisory/AdvisoryScreen';\r\nimport AdvisoryDetailScreen from '../screens/advisory/AdvisoryDetailScreen';\r\nimport AdvisorySearchScreen from '../screens/advisory/AdvisorySearchScreen';\r\nimport AdvisoryCategoryScreen from '../screens/advisory/AdvisoryCategoryScreen';\r\nimport GroupsScreen from '../screens/groups/GroupsScreen';\r\nimport GroupDetailScreen from '../screens/groups/GroupDetailScreen';\r\nimport GroupCreateScreen from '../screens/groups/GroupCreateScreen';\r\nimport GroupChatScreen from '../screens/groups/GroupChatScreen';\r\nimport SettingsScreen from '../screens/settings/SettingsScreen';\r\nimport AboutScreen from '../screens/settings/AboutScreen';\r\nimport PrivacyScreen from '../screens/settings/PrivacyScreen';\r\nimport TermsScreen from '../screens/settings/TermsScreen';\r\nimport NotificationsScreen from '../screens/notifications/NotificationsScreen';\r\n\r\n// Create navigators\r\nconst Stack = createNativeStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\nconst Drawer = createDrawerNavigator();\r\n\r\n// Icons for tabs and drawer\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\n// Main Tab Navigator (Bottom Tabs)\r\nconst MainTabNavigator = () => {\r\n  const { theme } = useTheme();\r\n  \r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarActiveTintColor: theme.colors.primary,\r\n        tabBarInactiveTintColor: theme.colors.tabIconInactive,\r\n        tabBarStyle: {\r\n          backgroundColor: theme.colors.background,\r\n          borderTopColor: theme.colors.border,\r\n          paddingBottom: 5,\r\n          height: 60,\r\n        },\r\n        tabBarLabelStyle: {\r\n          fontSize: 12,\r\n          fontWeight: '500',\r\n        }\r\n      }}\r\n    >\r\n      <Tab.Screen \r\n        name=\"HomeTab\" \r\n        component={HomeScreen} \r\n        options={{\r\n          tabBarLabel: 'Home',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Ionicons name=\"home\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"DiseaseTab\" \r\n        component={DiseaseNavigator} \r\n        options={{\r\n          tabBarLabel: 'Diseases',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Ionicons name=\"leaf\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"AdvisoryTab\" \r\n        component={AdvisoryNavigator} \r\n        options={{\r\n          tabBarLabel: 'Advisory',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Ionicons name=\"book\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen \r\n        name=\"GroupsTab\" \r\n        component={GroupsNavigator} \r\n        options={{\r\n          tabBarLabel: 'Groups',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Ionicons name=\"people\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\n// Disease Stack Navigator\r\nconst DiseaseNavigator = () => {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen name=\"DiseaseDetection\" component={DiseaseDetectionScreen} />\r\n      <Stack.Screen name=\"DiseaseResult\" component={DiseaseResultScreen} />\r\n      <Stack.Screen name=\"DiseaseHistory\" component={DiseaseHistoryScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\n// Advisory Stack Navigator\r\nconst AdvisoryNavigator = () => {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen name=\"Advisory\" component={AdvisoryScreen} />\r\n      <Stack.Screen name=\"AdvisoryDetail\" component={AdvisoryDetailScreen} />\r\n      <Stack.Screen name=\"AdvisorySearch\" component={AdvisorySearchScreen} />\r\n      <Stack.Screen name=\"AdvisoryCategory\" component={AdvisoryCategoryScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\n// Groups Stack Navigator\r\nconst GroupsNavigator = () => {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen name=\"Groups\" component={GroupsScreen} />\r\n      <Stack.Screen name=\"GroupDetail\" component={GroupDetailScreen} />\r\n      <Stack.Screen name=\"GroupCreate\" component={GroupCreateScreen} />\r\n      <Stack.Screen name=\"GroupChat\" component={GroupChatScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\n// Main Drawer Navigator\r\nconst MainDrawerNavigator = () => {\r\n  const { theme } = useTheme();\r\n  const { user, logout } = useAuth();\r\n  \r\n  return (\r\n    <Drawer.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        drawerActiveBackgroundColor: theme.colors.primaryLight,\r\n        drawerActiveTintColor: theme.colors.primary,\r\n        drawerInactiveTintColor: theme.colors.text,\r\n        drawerLabelStyle: {\r\n          fontSize: 16,\r\n          marginLeft: -20,\r\n        },\r\n        drawerStyle: {\r\n          backgroundColor: theme.colors.background,\r\n          width: 280,\r\n        }\r\n      }}\r\n      drawerContent={(props) => (\r\n        <DrawerContent {...props} user={user} logout={logout} />\r\n      )}\r\n    >\r\n      <Drawer.Screen \r\n        name=\"MainTabs\" \r\n        component={MainTabNavigator}\r\n        options={{\r\n          drawerLabel: 'Home',\r\n          drawerIcon: ({ color, size }) => (\r\n            <Ionicons name=\"home-outline\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Drawer.Screen \r\n        name=\"Profile\" \r\n        component={ProfileScreen}\r\n        options={{\r\n          drawerLabel: 'My Profile',\r\n          drawerIcon: ({ color, size }) => (\r\n            <Ionicons name=\"person-outline\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Drawer.Screen \r\n        name=\"Notifications\" \r\n        component={NotificationsScreen}\r\n        options={{\r\n          drawerLabel: 'Notifications',\r\n          drawerIcon: ({ color, size }) => (\r\n            <Ionicons name=\"notifications-outline\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Drawer.Screen \r\n        name=\"Settings\" \r\n        component={SettingsScreen}\r\n        options={{\r\n          drawerLabel: 'Settings',\r\n          drawerIcon: ({ color, size }) => (\r\n            <Ionicons name=\"settings-outline\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Drawer.Screen \r\n        name=\"About\" \r\n        component={AboutScreen}\r\n        options={{\r\n          drawerLabel: 'About',\r\n          drawerIcon: ({ color, size }) => (\r\n            <Ionicons name=\"information-circle-outline\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n    </Drawer.Navigator>\r\n  );\r\n};\r\n\r\n// Auth Navigator\r\nconst AuthNavigator = () => {\r\n  return (\r\n    <Stack.Navigator \r\n      screenOptions={{ \r\n        headerShown: false,\r\n        animation: 'slide_from_right',\r\n      }}\r\n    >\r\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n      <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n      <Stack.Screen name=\"ForgotPassword\" component={ForgotPasswordScreen} />\r\n      <Stack.Screen name=\"VerifyPhone\" component={VerifyPhoneScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\n// Root Navigator\r\nconst AppNavigator = () => {\r\n  const { theme } = useTheme();\r\n  const { isAuthenticated, isLoading } = useAuth();\r\n  const [hasCompletedOnboarding, setHasCompletedOnboarding] = useState(null);\r\n  \r\n  // Check if user has completed onboarding\r\n  useEffect(() => {\r\n    const checkOnboarding = async () => {\r\n      try {\r\n        const value = await AsyncStorage.getItem(STORAGE_KEYS.ONBOARDING_COMPLETED);\r\n        setHasCompletedOnboarding(value === 'true');\r\n      } catch (error) {\r\n        console.error('Error checking onboarding status:', error);\r\n        setHasCompletedOnboarding(false);\r\n      }\r\n    };\r\n    \r\n    checkOnboarding();\r\n  }, []);\r\n  \r\n  // Show splash screen while loading\r\n  if (isLoading || hasCompletedOnboarding === null) {\r\n    return <SplashScreen />;\r\n  }\r\n  \r\n  return (\r\n    <NavigationContainer theme={theme.navigation}>\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        {!hasCompletedOnboarding ? (\r\n          <Stack.Screen name=\"Onboarding\" component={OnboardingScreen} />\r\n        ) : !isAuthenticated ? (\r\n          <Stack.Screen name=\"Auth\" component={AuthNavigator} />\r\n        ) : (\r\n          <>\r\n            <Stack.Screen name=\"Main\" component={MainDrawerNavigator} />\r\n            <Stack.Screen name=\"ProfileEdit\" component={ProfileEditScreen} />\r\n            <Stack.Screen name=\"Privacy\" component={PrivacyScreen} />\r\n            <Stack.Screen name=\"Terms\" component={TermsScreen} />\r\n          </>\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\n// Custom Drawer Content\r\nconst DrawerContent = (props) => {\r\n  // This will be implemented later\r\n  return null;\r\n};\r\n\r\nexport default AppNavigator;"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,qBAAqB,QAAQ,0BAA0B;AAChE,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,OAAO;AAChB,SAASC,QAAQ;AACjB,SAASC,YAAY;AAGrB,OAAOC,YAAY;AACnB,OAAOC,gBAAgB;AACvB,OAAOC,WAAW;AAClB,OAAOC,cAAc;AACrB,OAAOC,oBAAoB;AAC3B,OAAOC,iBAAiB;AACxB,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,OAAOC,iBAAiB;AACxB,OAAOC,sBAAsB;AAC7B,OAAOC,mBAAmB;AAC1B,OAAOC,oBAAoB;AAC3B,OAAOC,cAAc;AACrB,OAAOC,oBAAoB;AAC3B,OAAOC,oBAAoB;AAC3B,OAAOC,sBAAsB;AAC7B,OAAOC,YAAY;AACnB,OAAOC,iBAAiB;AACxB,OAAOC,iBAAiB;AACxB,OAAOC,eAAe;AACtB,OAAOC,cAAc;AACrB,OAAOC,WAAW;AAClB,OAAOC,aAAa;AACpB,OAAOC,WAAW;AAClB,OAAOC,mBAAmB;AAG1B,IAAMC,KAAK,GAAGhC,0BAA0B,CAAC,CAAC;AAC1C,IAAMiC,GAAG,GAAGhC,wBAAwB,CAAC,CAAC;AACtC,IAAMiC,MAAM,GAAGhC,qBAAqB,CAAC,CAAC;AAGtC,SAASiC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA,EAAAC,QAAA,IAAAC,SAAA;AAG9C,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EAC7B,IAAAC,SAAA,GAAkBtC,QAAQ,CAAC,CAAC;IAApBuC,KAAK,GAAAD,SAAA,CAALC,KAAK;EAEb,OACEL,KAAA,CAACN,GAAG,CAACY,SAAS;IACZC,aAAa,EAAE;MACbC,WAAW,EAAE,KAAK;MAClBC,qBAAqB,EAAEJ,KAAK,CAACK,MAAM,CAACC,OAAO;MAC3CC,uBAAuB,EAAEP,KAAK,CAACK,MAAM,CAACG,eAAe;MACrDC,WAAW,EAAE;QACXC,eAAe,EAAEV,KAAK,CAACK,MAAM,CAACM,UAAU;QACxCC,cAAc,EAAEZ,KAAK,CAACK,MAAM,CAACQ,MAAM;QACnCC,aAAa,EAAE,CAAC;QAChBC,MAAM,EAAE;MACV,CAAC;MACDC,gBAAgB,EAAE;QAChBC,QAAQ,EAAE,EAAE;QACZC,UAAU,EAAE;MACd;IACF,CAAE;IAAAC,QAAA,GAEF1B,IAAA,CAACJ,GAAG,CAAC+B,MAAM;MACTC,IAAI,EAAC,SAAS;MACdC,SAAS,EAAErD,UAAW;MACtBsD,OAAO,EAAE;QACPC,WAAW,EAAE,MAAM;QACnBC,UAAU,EAAE,SAAZA,UAAUA,CAAAC,IAAA;UAAA,IAAKC,KAAK,GAAAD,IAAA,CAALC,KAAK;YAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;UAAA,OACxBnC,IAAA,CAACF,QAAQ;YAAC8B,IAAI,EAAC,MAAM;YAACO,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAEtD;IAAE,CACH,CAAC,EACFlC,IAAA,CAACJ,GAAG,CAAC+B,MAAM;MACTC,IAAI,EAAC,YAAY;MACjBC,SAAS,EAAEO,gBAAiB;MAC5BN,OAAO,EAAE;QACPC,WAAW,EAAE,UAAU;QACvBC,UAAU,EAAE,SAAZA,UAAUA,CAAAK,KAAA;UAAA,IAAKH,KAAK,GAAAG,KAAA,CAALH,KAAK;YAAEC,IAAI,GAAAE,KAAA,CAAJF,IAAI;UAAA,OACxBnC,IAAA,CAACF,QAAQ;YAAC8B,IAAI,EAAC,MAAM;YAACO,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAEtD;IAAE,CACH,CAAC,EACFlC,IAAA,CAACJ,GAAG,CAAC+B,MAAM;MACTC,IAAI,EAAC,aAAa;MAClBC,SAAS,EAAES,iBAAkB;MAC7BR,OAAO,EAAE;QACPC,WAAW,EAAE,UAAU;QACvBC,UAAU,EAAE,SAAZA,UAAUA,CAAAO,KAAA;UAAA,IAAKL,KAAK,GAAAK,KAAA,CAALL,KAAK;YAAEC,IAAI,GAAAI,KAAA,CAAJJ,IAAI;UAAA,OACxBnC,IAAA,CAACF,QAAQ;YAAC8B,IAAI,EAAC,MAAM;YAACO,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAEtD;IAAE,CACH,CAAC,EACFlC,IAAA,CAACJ,GAAG,CAAC+B,MAAM;MACTC,IAAI,EAAC,WAAW;MAChBC,SAAS,EAAEW,eAAgB;MAC3BV,OAAO,EAAE;QACPC,WAAW,EAAE,QAAQ;QACrBC,UAAU,EAAE,SAAZA,UAAUA,CAAAS,KAAA;UAAA,IAAKP,KAAK,GAAAO,KAAA,CAALP,KAAK;YAAEC,IAAI,GAAAM,KAAA,CAAJN,IAAI;UAAA,OACxBnC,IAAA,CAACF,QAAQ;YAAC8B,IAAI,EAAC,QAAQ;YAACO,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAExD;IAAE,CACH,CAAC;EAAA,CACW,CAAC;AAEpB,CAAC;AAGD,IAAME,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EAC7B,OACElC,KAAA,CAACP,KAAK,CAACa,SAAS;IAACC,aAAa,EAAE;MAAEC,WAAW,EAAE;IAAM,CAAE;IAAAgB,QAAA,GACrD1B,IAAA,CAACL,KAAK,CAACgC,MAAM;MAACC,IAAI,EAAC,kBAAkB;MAACC,SAAS,EAAElD;IAAuB,CAAE,CAAC,EAC3EqB,IAAA,CAACL,KAAK,CAACgC,MAAM;MAACC,IAAI,EAAC,eAAe;MAACC,SAAS,EAAEjD;IAAoB,CAAE,CAAC,EACrEoB,IAAA,CAACL,KAAK,CAACgC,MAAM;MAACC,IAAI,EAAC,gBAAgB;MAACC,SAAS,EAAEhD;IAAqB,CAAE,CAAC;EAAA,CACxD,CAAC;AAEtB,CAAC;AAGD,IAAMyD,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;EAC9B,OACEpC,KAAA,CAACP,KAAK,CAACa,SAAS;IAACC,aAAa,EAAE;MAAEC,WAAW,EAAE;IAAM,CAAE;IAAAgB,QAAA,GACrD1B,IAAA,CAACL,KAAK,CAACgC,MAAM;MAACC,IAAI,EAAC,UAAU;MAACC,SAAS,EAAE/C;IAAe,CAAE,CAAC,EAC3DkB,IAAA,CAACL,KAAK,CAACgC,MAAM;MAACC,IAAI,EAAC,gBAAgB;MAACC,SAAS,EAAE9C;IAAqB,CAAE,CAAC,EACvEiB,IAAA,CAACL,KAAK,CAACgC,MAAM;MAACC,IAAI,EAAC,gBAAgB;MAACC,SAAS,EAAE7C;IAAqB,CAAE,CAAC,EACvEgB,IAAA,CAACL,KAAK,CAACgC,MAAM;MAACC,IAAI,EAAC,kBAAkB;MAACC,SAAS,EAAE5C;IAAuB,CAAE,CAAC;EAAA,CAC5D,CAAC;AAEtB,CAAC;AAGD,IAAMuD,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EAC5B,OACEtC,KAAA,CAACP,KAAK,CAACa,SAAS;IAACC,aAAa,EAAE;MAAEC,WAAW,EAAE;IAAM,CAAE;IAAAgB,QAAA,GACrD1B,IAAA,CAACL,KAAK,CAACgC,MAAM;MAACC,IAAI,EAAC,QAAQ;MAACC,SAAS,EAAE3C;IAAa,CAAE,CAAC,EACvDc,IAAA,CAACL,KAAK,CAACgC,MAAM;MAACC,IAAI,EAAC,aAAa;MAACC,SAAS,EAAE1C;IAAkB,CAAE,CAAC,EACjEa,IAAA,CAACL,KAAK,CAACgC,MAAM;MAACC,IAAI,EAAC,aAAa;MAACC,SAAS,EAAEzC;IAAkB,CAAE,CAAC,EACjEY,IAAA,CAACL,KAAK,CAACgC,MAAM;MAACC,IAAI,EAAC,WAAW;MAACC,SAAS,EAAExC;IAAgB,CAAE,CAAC;EAAA,CAC9C,CAAC;AAEtB,CAAC;AAGD,IAAMqD,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;EAChC,IAAAC,UAAA,GAAkB3E,QAAQ,CAAC,CAAC;IAApBuC,KAAK,GAAAoC,UAAA,CAALpC,KAAK;EACb,IAAAqC,QAAA,GAAyB7E,OAAO,CAAC,CAAC;IAA1B8E,IAAI,GAAAD,QAAA,CAAJC,IAAI;IAAEC,MAAM,GAAAF,QAAA,CAANE,MAAM;EAEpB,OACE5C,KAAA,CAACL,MAAM,CAACW,SAAS;IACfC,aAAa,EAAE;MACbC,WAAW,EAAE,KAAK;MAClBqC,2BAA2B,EAAExC,KAAK,CAACK,MAAM,CAACoC,YAAY;MACtDC,qBAAqB,EAAE1C,KAAK,CAACK,MAAM,CAACC,OAAO;MAC3CqC,uBAAuB,EAAE3C,KAAK,CAACK,MAAM,CAACuC,IAAI;MAC1CC,gBAAgB,EAAE;QAChB5B,QAAQ,EAAE,EAAE;QACZ6B,UAAU,EAAE,CAAC;MACf,CAAC;MACDC,WAAW,EAAE;QACXrC,eAAe,EAAEV,KAAK,CAACK,MAAM,CAACM,UAAU;QACxCqC,KAAK,EAAE;MACT;IACF,CAAE;IACFC,aAAa,EAAE,SAAfA,aAAaA,CAAGC,KAAK;MAAA,OACnBzD,IAAA,CAAC0D,aAAa,EAAAC,aAAA,CAAAA,aAAA,KAAKF,KAAK;QAAEZ,IAAI,EAAEA,IAAK;QAACC,MAAM,EAAEA;MAAO,EAAE,CAAC;IAAA,CACxD;IAAApB,QAAA,GAEF1B,IAAA,CAACH,MAAM,CAAC8B,MAAM;MACZC,IAAI,EAAC,UAAU;MACfC,SAAS,EAAExB,gBAAiB;MAC5ByB,OAAO,EAAE;QACP8B,WAAW,EAAE,MAAM;QACnBC,UAAU,EAAE,SAAZA,UAAUA,CAAAC,KAAA;UAAA,IAAK5B,KAAK,GAAA4B,KAAA,CAAL5B,KAAK;YAAEC,IAAI,GAAA2B,KAAA,CAAJ3B,IAAI;UAAA,OACxBnC,IAAA,CAACF,QAAQ;YAAC8B,IAAI,EAAC,cAAc;YAACO,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAE9D;IAAE,CACH,CAAC,EACFlC,IAAA,CAACH,MAAM,CAAC8B,MAAM;MACZC,IAAI,EAAC,SAAS;MACdC,SAAS,EAAEpD,aAAc;MACzBqD,OAAO,EAAE;QACP8B,WAAW,EAAE,YAAY;QACzBC,UAAU,EAAE,SAAZA,UAAUA,CAAAE,KAAA;UAAA,IAAK7B,KAAK,GAAA6B,KAAA,CAAL7B,KAAK;YAAEC,IAAI,GAAA4B,KAAA,CAAJ5B,IAAI;UAAA,OACxBnC,IAAA,CAACF,QAAQ;YAAC8B,IAAI,EAAC,gBAAgB;YAACO,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAEhE;IAAE,CACH,CAAC,EACFlC,IAAA,CAACH,MAAM,CAAC8B,MAAM;MACZC,IAAI,EAAC,eAAe;MACpBC,SAAS,EAAEnC,mBAAoB;MAC/BoC,OAAO,EAAE;QACP8B,WAAW,EAAE,eAAe;QAC5BC,UAAU,EAAE,SAAZA,UAAUA,CAAAG,KAAA;UAAA,IAAK9B,KAAK,GAAA8B,KAAA,CAAL9B,KAAK;YAAEC,IAAI,GAAA6B,KAAA,CAAJ7B,IAAI;UAAA,OACxBnC,IAAA,CAACF,QAAQ;YAAC8B,IAAI,EAAC,uBAAuB;YAACO,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAEvE;IAAE,CACH,CAAC,EACFlC,IAAA,CAACH,MAAM,CAAC8B,MAAM;MACZC,IAAI,EAAC,UAAU;MACfC,SAAS,EAAEvC,cAAe;MAC1BwC,OAAO,EAAE;QACP8B,WAAW,EAAE,UAAU;QACvBC,UAAU,EAAE,SAAZA,UAAUA,CAAAI,KAAA;UAAA,IAAK/B,KAAK,GAAA+B,KAAA,CAAL/B,KAAK;YAAEC,IAAI,GAAA8B,KAAA,CAAJ9B,IAAI;UAAA,OACxBnC,IAAA,CAACF,QAAQ;YAAC8B,IAAI,EAAC,kBAAkB;YAACO,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAElE;IAAE,CACH,CAAC,EACFlC,IAAA,CAACH,MAAM,CAAC8B,MAAM;MACZC,IAAI,EAAC,OAAO;MACZC,SAAS,EAAEtC,WAAY;MACvBuC,OAAO,EAAE;QACP8B,WAAW,EAAE,OAAO;QACpBC,UAAU,EAAE,SAAZA,UAAUA,CAAAK,KAAA;UAAA,IAAKhC,KAAK,GAAAgC,KAAA,CAALhC,KAAK;YAAEC,IAAI,GAAA+B,KAAA,CAAJ/B,IAAI;UAAA,OACxBnC,IAAA,CAACF,QAAQ;YAAC8B,IAAI,EAAC,4BAA4B;YAACO,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAE,CAAC;QAAA;MAE5E;IAAE,CACH,CAAC;EAAA,CACc,CAAC;AAEvB,CAAC;AAGD,IAAMiC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAC1B,OACEjE,KAAA,CAACP,KAAK,CAACa,SAAS;IACdC,aAAa,EAAE;MACbC,WAAW,EAAE,KAAK;MAClB0D,SAAS,EAAE;IACb,CAAE;IAAA1C,QAAA,GAEF1B,IAAA,CAACL,KAAK,CAACgC,MAAM;MAACC,IAAI,EAAC,OAAO;MAACC,SAAS,EAAEzD;IAAY,CAAE,CAAC,EACrD4B,IAAA,CAACL,KAAK,CAACgC,MAAM;MAACC,IAAI,EAAC,UAAU;MAACC,SAAS,EAAExD;IAAe,CAAE,CAAC,EAC3D2B,IAAA,CAACL,KAAK,CAACgC,MAAM;MAACC,IAAI,EAAC,gBAAgB;MAACC,SAAS,EAAEvD;IAAqB,CAAE,CAAC,EACvE0B,IAAA,CAACL,KAAK,CAACgC,MAAM;MAACC,IAAI,EAAC,aAAa;MAACC,SAAS,EAAEtD;IAAkB,CAAE,CAAC;EAAA,CAClD,CAAC;AAEtB,CAAC;AAGD,IAAM8F,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,IAAAC,UAAA,GAAkBtG,QAAQ,CAAC,CAAC;IAApBuC,KAAK,GAAA+D,UAAA,CAAL/D,KAAK;EACb,IAAAgE,SAAA,GAAuCxG,OAAO,CAAC,CAAC;IAAxCyG,eAAe,GAAAD,SAAA,CAAfC,eAAe;IAAEC,SAAS,GAAAF,SAAA,CAATE,SAAS;EAClC,IAAAC,SAAA,GAA4DjH,QAAQ,CAAC,IAAI,CAAC;IAAAkH,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnEG,sBAAsB,GAAAF,UAAA;IAAEG,yBAAyB,GAAAH,UAAA;EAGxDnH,SAAS,CAAC,YAAM;IACd,IAAMuH,eAAe;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QAClC,IAAI;UACF,IAAMC,KAAK,SAASpH,YAAY,CAACqH,OAAO,CAAClH,YAAY,CAACmH,oBAAoB,CAAC;UAC3EN,yBAAyB,CAACI,KAAK,KAAK,MAAM,CAAC;QAC7C,CAAC,CAAC,OAAOG,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;UACzDP,yBAAyB,CAAC,KAAK,CAAC;QAClC;MACF,CAAC;MAAA,gBARKC,eAAeA,CAAA;QAAA,OAAAC,KAAA,CAAAO,KAAA,OAAAC,SAAA;MAAA;IAAA,GAQpB;IAEDT,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAGN,IAAIN,SAAS,IAAII,sBAAsB,KAAK,IAAI,EAAE;IAChD,OAAO7E,IAAA,CAAC9B,YAAY,IAAE,CAAC;EACzB;EAEA,OACE8B,IAAA,CAACtC,mBAAmB;IAAC6C,KAAK,EAAEA,KAAK,CAACkF,UAAW;IAAA/D,QAAA,EAC3C1B,IAAA,CAACL,KAAK,CAACa,SAAS;MAACC,aAAa,EAAE;QAAEC,WAAW,EAAE;MAAM,CAAE;MAAAgB,QAAA,EACpD,CAACmD,sBAAsB,GACtB7E,IAAA,CAACL,KAAK,CAACgC,MAAM;QAACC,IAAI,EAAC,YAAY;QAACC,SAAS,EAAE1D;MAAiB,CAAE,CAAC,GAC7D,CAACqG,eAAe,GAClBxE,IAAA,CAACL,KAAK,CAACgC,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEsC;MAAc,CAAE,CAAC,GAEtDjE,KAAA,CAAAE,SAAA;QAAAsB,QAAA,GACE1B,IAAA,CAACL,KAAK,CAACgC,MAAM;UAACC,IAAI,EAAC,MAAM;UAACC,SAAS,EAAEa;QAAoB,CAAE,CAAC,EAC5D1C,IAAA,CAACL,KAAK,CAACgC,MAAM;UAACC,IAAI,EAAC,aAAa;UAACC,SAAS,EAAEnD;QAAkB,CAAE,CAAC,EACjEsB,IAAA,CAACL,KAAK,CAACgC,MAAM;UAACC,IAAI,EAAC,SAAS;UAACC,SAAS,EAAErC;QAAc,CAAE,CAAC,EACzDQ,IAAA,CAACL,KAAK,CAACgC,MAAM;UAACC,IAAI,EAAC,OAAO;UAACC,SAAS,EAAEpC;QAAY,CAAE,CAAC;MAAA,CACrD;IACH,CACc;EAAC,CACC,CAAC;AAE1B,CAAC;AAGD,IAAMiE,aAAa,GAAG,SAAhBA,aAAaA,CAAID,KAAK,EAAK;EAE/B,OAAO,IAAI;AACb,CAAC;AAED,eAAeY,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}