{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport FlashMessage from 'react-native-flash-message';\nimport * as Font from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useFonts, Poppins_400Regular, Poppins_500Medium, Poppins_600SemiBold, Poppins_700Bold } from '@expo-google-fonts/poppins';\nimport { Roboto_400Regular, Roboto_500Medium, Roboto_700Bold } from '@expo-google-fonts/roboto';\nimport { store, persistor } from \"./src/redux/store\";\nimport AppNavigator from \"./src/navigation/AppNavigator\";\nimport { ThemeProvider } from \"./src/contexts/ThemeContext\";\nimport { DatabaseProvider } from \"./src/contexts/DatabaseContext\";\nimport { NetworkProvider } from \"./src/contexts/NetworkContext\";\nimport { LocalizationProvider } from \"./src/contexts/LocalizationContext\";\nimport { SyncProvider } from \"./src/contexts/SyncContext\";\nimport { AuthProvider } from \"./src/contexts/AuthContext\";\nimport LoadingScreen from \"./src/components/common/LoadingScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nLogBox.ignoreLogs(['ViewPropTypes will be removed', 'ColorPropType will be removed', 'Non-serializable values were found in the navigation state']);\nSplashScreen.preventAutoHideAsync();\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    appIsReady = _useState2[0],\n    setAppIsReady = _useState2[1];\n  var _useFonts = useFonts({\n      Poppins_400Regular: Poppins_400Regular,\n      Poppins_500Medium: Poppins_500Medium,\n      Poppins_600SemiBold: Poppins_600SemiBold,\n      Poppins_700Bold: Poppins_700Bold,\n      Roboto_400Regular: Roboto_400Regular,\n      Roboto_500Medium: Roboto_500Medium,\n      Roboto_700Bold: Roboto_700Bold\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  useEffect(function () {\n    function prepare() {\n      return _prepare.apply(this, arguments);\n    }\n    function _prepare() {\n      _prepare = _asyncToGenerator(function* () {\n        try {\n          yield Font.loadAsync({});\n        } catch (e) {\n          console.warn('Error loading resources:', e);\n        } finally {\n          if (fontsLoaded) {\n            setAppIsReady(true);\n          }\n        }\n      });\n      return _prepare.apply(this, arguments);\n    }\n    prepare();\n  }, [fontsLoaded]);\n  useEffect(function () {\n    if (appIsReady) {\n      SplashScreen.hideAsync();\n    }\n  }, [appIsReady]);\n  if (!appIsReady) {\n    return null;\n  }\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(PersistGate, {\n      loading: _jsx(LoadingScreen, {}),\n      persistor: persistor,\n      children: _jsx(ThemeProvider, {\n        children: _jsx(LocalizationProvider, {\n          children: _jsx(NetworkProvider, {\n            children: _jsx(DatabaseProvider, {\n              children: _jsx(SyncProvider, {\n                children: _jsx(SafeAreaProvider, {\n                  children: _jsx(AuthProvider, {\n                    children: _jsxs(NavigationContainer, {\n                      children: [_jsx(StatusBar, {\n                        barStyle: \"dark-content\",\n                        backgroundColor: \"transparent\",\n                        translucent: true\n                      }), _jsx(AppNavigator, {}), _jsx(FlashMessage, {\n                        position: \"top\"\n                      })]\n                    })\n                  })\n                })\n              })\n            })\n          })\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","LogBox","StatusBar","SafeAreaProvider","Provider","PersistGate","NavigationContainer","FlashMessage","Font","SplashScreen","useFonts","Poppins_400Regular","Poppins_500Medium","Poppins_600SemiBold","Poppins_700Bold","Roboto_400Regular","Roboto_500Medium","Roboto_700Bold","store","persistor","AppNavigator","ThemeProvider","DatabaseProvider","NetworkProvider","LocalizationProvider","SyncProvider","AuthProvider","LoadingScreen","jsx","_jsx","jsxs","_jsxs","ignoreLogs","preventAutoHideAsync","App","_useState","_useState2","_slicedToArray","appIsReady","setAppIsReady","_useFonts","_useFonts2","fontsLoaded","prepare","_prepare","apply","arguments","_asyncToGenerator","loadAsync","e","console","warn","hideAsync","children","loading","barStyle","backgroundColor","translucent","position"],"sources":["C:/Users/eacha/OneDrive/Desktop/SMART FARMER/FRONTEND/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { LogBox, StatusBar } from 'react-native';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport FlashMessage from 'react-native-flash-message';\r\nimport * as Font from 'expo-font';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport {\r\n  useFonts,\r\n  Poppins_400Regular,\r\n  Poppins_500Medium,\r\n  Poppins_600SemiBold,\r\n  Poppins_700Bold,\r\n} from '@expo-google-fonts/poppins';\r\nimport {\r\n  Roboto_400Regular,\r\n  Roboto_500Medium,\r\n  Roboto_700Bold,\r\n} from '@expo-google-fonts/roboto';\r\n\r\nimport { store, persistor } from './src/redux/store';\r\nimport AppNavigator from './src/navigation/AppNavigator';\r\nimport { ThemeProvider } from './src/contexts/ThemeContext';\r\nimport { DatabaseProvider } from './src/contexts/DatabaseContext';\r\nimport { NetworkProvider } from './src/contexts/NetworkContext';\r\nimport { LocalizationProvider } from './src/contexts/LocalizationContext';\r\nimport { SyncProvider } from './src/contexts/SyncContext';\r\nimport { AuthProvider } from './src/contexts/AuthContext';\r\nimport LoadingScreen from './src/components/common/LoadingScreen';\r\n\r\n// Ignore specific LogBox warnings\r\nLogBox.ignoreLogs([\r\n  'ViewPropTypes will be removed',\r\n  'ColorPropType will be removed',\r\n  'Non-serializable values were found in the navigation state',\r\n]);\r\n\r\n// Keep splash screen visible while loading\r\nSplashScreen.preventAutoHideAsync();\r\n\r\nexport default function App() {\r\n  const [appIsReady, setAppIsReady] = useState(false);\r\n\r\n  // Load fonts\r\n  const [fontsLoaded] = useFonts({\r\n    Poppins_400Regular,\r\n    Poppins_500Medium,\r\n    Poppins_600SemiBold,\r\n    Poppins_700Bold,\r\n    Roboto_400Regular,\r\n    Roboto_500Medium,\r\n    Roboto_700Bold,\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function prepare() {\r\n      try {\r\n        // Pre-load fonts, make API calls, etc.\r\n        await Font.loadAsync({\r\n          // Load additional fonts if needed\r\n        });\r\n      } catch (e) {\r\n        console.warn('Error loading resources:', e);\r\n      } finally {\r\n        if (fontsLoaded) {\r\n          setAppIsReady(true);\r\n        }\r\n      }\r\n    }\r\n\r\n    prepare();\r\n  }, [fontsLoaded]);\r\n\r\n  useEffect(() => {\r\n    if (appIsReady) {\r\n      // Hide splash screen once everything is ready\r\n      SplashScreen.hideAsync();\r\n    }\r\n  }, [appIsReady]);\r\n\r\n  if (!appIsReady) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={<LoadingScreen />} persistor={persistor}>\r\n        <ThemeProvider>\r\n          <LocalizationProvider>\r\n            <NetworkProvider>\r\n              <DatabaseProvider>\r\n                <SyncProvider>\r\n                  <SafeAreaProvider>\r\n                    <AuthProvider>\r\n                      <NavigationContainer>\r\n                        <StatusBar\r\n                          barStyle=\"dark-content\"\r\n                          backgroundColor=\"transparent\"\r\n                          translucent\r\n                        />\r\n                        <AppNavigator />\r\n                        <FlashMessage position=\"top\" />\r\n                      </NavigationContainer>\r\n                    </AuthProvider>\r\n                  </SafeAreaProvider>\r\n                </SyncProvider>\r\n              </DatabaseProvider>\r\n            </NetworkProvider>\r\n          </LocalizationProvider>\r\n        </ThemeProvider>\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}